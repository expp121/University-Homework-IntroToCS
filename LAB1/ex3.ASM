	CLO
	JMP START
	DB 0		  ; VARIABLE A 
	DB 0 		  ; VARIABLE B

START:
	MOV AL , [03] ; MOVE THE VALUE OF ADDRESS [03] INTO al
	CMP AL , 3	  ; COMPARE REGISTER al TO 3
	JZ INC		  ; JUMP TO INC IF AL = 3

CONTINUE:
	ADD AL , 1	  ; ADD ONE TO AL
	MOV [03] , AL ; SAVE THE VALUE TO ADDRESS [03]
	CMP AL , 6	  ; COMPARE AL TO 6 AND IF IT LESS THAN 6 JUMP TO START
	JS START	  

	ADD AL, 30	  ; CONVERT THE VALUE OF al TO ASCII
	ADD BL, 30	  ; CONVERT THE VALUE OF bl TO ASCII

	MOV CL , 41	  ; PUT 'A' INTO cl
	MOV [C0] , CL ; DISPLAY IT
	MOV CL , 3D   ; PUT '=' INTO cl
	MOV [C1] , CL ; DISPLAY IT
	MOV [C2] , AL ; DISPLAY THE VALUE OF al

	MOV CL , 42   ; ; PUT 'B' INTO cl
	MOV [D0], CL  ; DISPLAY IT
	MOV CL , 3D	  ; PUT '=' INTO cl
	MOV [D1], CL  ; DISPLAY IT
	MOV [D2], BL  ; DISPLAY THE VALUE OF bl
	JMP END

INC:
	MOV BL, [04]  ; MOVE THE VALUE OF VARIABLE b INTO bl
	ADD BL, 3     ; INCREMENT IT BY 3
	MOV [04], BL  ; SAVE IT TO IT'S ADDRESS
	JMP CONTINUE  ; JUMP TO CONTINUE

END:
	END